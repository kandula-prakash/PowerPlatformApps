(window.bundleExecutionMarkers=window.bundleExecutionMarkers||{})["scripts/4.js?v=1.4.3886-master"]={begin:performance.now()},(window.__wpJsonpUci=window.__wpJsonpUci||[]).push([[4,90],{"0oMj":function(t,e,r){"use strict";r.d(e,"a",(function(){return n}));var a=r("Nzmy");
/**
 * @license Copyright (c) Microsoft Corporation. All rights reserved.
 */const i={[-7e3.toString()]:"Your organization has not opted in for the Mobile Offline feature.",[-7001..toString()]:"You must opt in to the Offline mode to use this feature. ",[-7002..toString()]:"This feature is not available when you are connected to Dynamics 365 server.",[-7003..toString()]:"The Offline Data Store is not ready to  perform the operation.",[-7004..toString()]:"{0} is a required parameter and cannot be null.",[-7005..toString()]:"{0} is an invalid value for the field.",[-7006..toString()]:"{0} is an invalid GUID.",[-7007..toString()]:"Max Page Size should be a number.",[-7008..toString()]:"Max Page Size should be a positive integer.",[-7009..toString()]:'Option Parameter should begin with "?".',[-7010..toString()]:"{0} operation doesn't have privilege to perform the operation.",[-7011..toString()]:"Attribute Metadata not found for entity {0}.",[-7012..toString()]:"Specified attributes are Invalid.",[-7013..toString()]:"Attribute {0} is not supported in offline mode.",[-7014..toString()]:"Entity {0} is not supported.",[-7015..toString()]:"Entity {0} is not enabled.",[-7016..toString()]:"Entity {0} is not available due to a mismatch in metadata.",[-7017..toString()]:"Entity Metadata not found for entity {0}.",[-7018..toString()]:"Specified query option string is invalid.",[-7019..toString()]:"The value of {0} query option cannot be null.",[-7020..toString()]:"Invalid value specified for the {0} query option.",[-7021..toString()]:"Specified Navigation Property not found for entity {0}.",[-7022..toString()]:"Navigation Property {0} is not present for entity {1}.",[-7023..toString()]:"The value of $top query option must be a non-negative number.",[-7024..toString()]:'Invalid direction suffix specified in the $orderby query option. Use the "asc" or "desc" suffix to specify ascending or descending order respectively.',[-7025..toString()]:"Specified FetchXML is invalid.",[-7026..toString()]:"No other query options are supported with the FetchXML option.",[-7027..toString()]:"Query option {0} is not supported.",[-7028..toString()]:"Retrieve doesn't support query option {0}.",[-7029..toString()]:"Record not found.",[-7030..toString()]:"Error occurred during SQL generation.",[-7031..toString()]:"Error occurred while executing SQL.",[-7032..toString()]:"An unexpected error occurred.",[-7033..toString()]:"Invalid value specified for attribute {0}.",[-7034..toString()]:"Create or update or delete action on Activity Party and Intersect Entity are not allowed."};function n(t,e){if(t&&i[t.toString()]){let r=i[t.toString()];return e&&e.length>0&&(r=String.format(r,e)),r}throw a.c.error("Offline.XrmOfflineErrors.getErrorCodeMessage: Cant return error message for an invalid error code:"+t),new Error("XrmOfflineErrors: Cant return error message for an invalid error code:"+t)}},EXJz:function(t,e,r){"use strict";r.r(e),r.d(e,"basicValidator",(function(){return P})),r.d(e,"formatPartyListObject",(function(){return L})),r.d(e,"formatEntityReferenceObject",(function(){return T})),r.d(e,"attributeValidatorAndFormatter",(function(){return _})),r.d(e,"optionsValidator",(function(){return x})),r.d(e,"getAttributeTypesFromOData",(function(){return R})),r.d(e,"getAttributeNameFromOData",(function(){return q})),r.d(e,"getAttributeBindMatchFromOdata",(function(){return Q})),r.d(e,"getAttributeValueMatchFromOdata",(function(){return D}));var a=r("Uv1Y"),i=r("TBkx"),n=r("LbMF"),o=r("iZ7K"),c=r("0oMj"),l=r("iF9X"),s=r("sZ+8"),f=r("37s6"),u=r("GL3b"),d=r("IqkD"),p=r("SAYH"),b=r("3hnk"),O=r("69Qu"),g=r("Nzmy"),y=r("+5Bq"),h=r("wHbR"),m=r("FZDd"),w=r("MXaZ"),v=r("HYaY"),S=r("WRF3"),j=r("sdkC"),V=r("wMH2"),E=r("8Mff"),N=r("eZ32"),k=r("504W"),I=r("/A0C"),X=r("3/02"),M=r("Lyxw");
/**
 * @license Copyright (c) Microsoft Corporation. All rights reserved.
 */
function P(t,e,r,n){return new Promise((d,p)=>{if(!Object(l.a)(r.getState()))throw new a.a(Object(c.a)(-7e3),-7e3);return Object(O.c)(r.getState())?(g.c.error("Offline.XrmOfflineValidators.basicValidator: Cant call offline Client APIs in online mode for this entity"),p(new a.a(Object(c.a)(-7002),-7002))):Object(f.v)(r.getState())!==E.a.Enabled?(g.c.error("Offline.XrmOfflineValidators.basicValidator: Cant call offline Client APIs in when the user isnt opted in for this entity:"),p(new a.a(Object(c.a)(-7001),-7001))):Object(f.w)(r.getState())!==N.a.Available?(g.c.error("Offline.XrmOfflineValidators.basicValidator: Cant call offline Client APIs when status is not marked as available (offline db is not available) for this entity:"),p(new a.a(Object(c.a)(-7003),-7003))):(g.c.info(`Offline.XrmOfflineValidators.basicValidator: Base level validations completed for entity:${t} & request type:${e.toString()}`),void r.dispatch(Object(m.f)(t,!0,null,n)).then(()=>{const i=r.getState();if(Object(o.h)(i,t)){const n=Object(u.b)(r.getState());if(!n||n.indexOf(t)<0)return g.c.error(`Offline.XrmOfflineValidators.basicValidator: Cant call offline Client APIs when ${t} is not present in user's profile.`),p(new a.a(Object(c.a)(-7015,[t]),-7015));if(-1===Object(s.l)(r.getState()).indexOf(t))return g.c.error(`Offline.XrmOfflineValidators.basicValidator: Cant call offline Client APIs when ${t} is marked offline disabled.`),p(new a.a(Object(c.a)(-7016,[t]),-7016));const l=4===e||5===e?2:0===e?1:1===e?3:4;return!Object(o.s)(i,t)&&t!==h.b.ActivityParty||2===l?Object(b.g)(r.getState(),t,l,-1)?(g.c.info(`Offline.XrmOfflineValidators.basicValidator: Entity level validations completed for entity:${t} & request type:${e.toString()}`),d()):(g.c.error(`Offline.XrmOfflineValidators.basicValidator: Cant call offline Client APIs for ${t} as the user don't have permission for operation: ${l.toString()}`),p(new a.a(Object(c.a)(-7010,[l.toString()]),-7010))):(g.c.error(`Offline.XrmOfflineValidators.basicValidator: Cant call offline Client APIs for ${t} with operation: ${l.toString()} as only read operation is allowed for it.`),p(new a.a(Object(c.a)(-7034),-7034)))}return g.c.error("Offline.XrmOfflineValidators.basicValidator: Entity metadata not present in state tree for this entity"),p(new a.a(Object(c.a)(-7017,[t]),-7017))}).catch(t=>(g.c.error("Offline.XrmOfflineValidators.basicValidator: Retrieval of metadata failed for entity with error:"+Object(i.f)(t)),p(t))))})}function _(t,e,r,o){Object.keys(o).forEach(l=>{const s=o[l];let f=r[l];if(!Object(k.a)(f)){let o=!0;try{switch(s){case I.a.Integer:case I.a.BigInt:isNaN(parseInt(f.toString(),10))?(g.c.error("Invalid value for attribute "+l+" type of "+s),o=!1):f=parseInt(f.toString(),10);break;case I.a.Decimal:case I.a.Double:case I.a.Money:isNaN(parseFloat(f.toString()))&&(g.c.error("Invalid value for attribute "+l+" type of "+s),o=!1);break;case I.a.DateTime:const r=Object(n.a)(e.getState(),t,l);f="DateOnly"===r.Format?Object(w.p)(Object(w.u)(f),Object(d.l)(e.getState()),r.Behavior,Object(d.k)(e.getState())):Object(w.p)(f,Object(d.l)(e.getState()),r.Behavior,Object(d.k)(e.getState()));break;case I.a.Boolean:"true"===f.toString().toLowerCase()||"false"===f.toString().toLowerCase()?f={[h.b.Value]:"true"===f.toString().toLowerCase()?"1":"0"}:(g.c.error("Invalid value for attribute "+l+" type of "+s),o=!1);break;case I.a.State:case I.a.Status:case I.a.PickList:isNaN(parseInt(f.toString(),10))?(g.c.error("Invalid value for attribute "+l+" type of "+s),o=!1):f={[h.b.Value]:parseInt(f.toString(),10)};break;case I.a.UniqueIdentifier:f={[h.b.RawGuid]:f.toString()};break;case I.a.Lookup:case I.a.Customer:case I.a.Owner:(function(t){return!(null===t||"object"!=typeof t||t instanceof Array||t instanceof Date)})(f)&&f[h.b.Id]&&f[h.b.LogicalName]?f=T(f):(g.c.error("Invalid value for attribute "+l+" type of "+s),o=!1);break;case I.a.PartyList:f instanceof Array&&f.length>0?f=L(f):(g.c.error("Invalid value for attribute "+l+" type of "+s),o=!1);break;case I.a.String:case I.a.Memo:case I.a.Unknown:case I.a.EntityName:break;default:throw new a.a(Object(c.a)(-7013,[l]),-7013)}if(!o)throw new Error("Invalid value for attribute "+l+" type of "+s);s!==I.a.PartyList&&(f=v.a.createSingleFieldFromObjectData(f,s))}catch(t){throw g.c.error(" formatting of attribute value failed with "+Object(i.f)(t)),t}r[l]=f}})}function T(t){return{[h.b.Id]:{[h.b.RawGuid]:t[h.b.Id]},[h.b.LogicalName]:t[h.b.LogicalName],[h.b.Name]:A(t[h.b.Name])}}function L(t){const e=[],r=new S.a(h.b.ActivityParty,p.a.toLegacyGuid(p.a.EMPTY));return t.map(t=>{if(!t[h.b.Id]||!t[h.b.LogicalName])throw new Error("invalid value for party list attribute ");e.push(new v.a(r,{[h.b.PartyId]:v.a.createSingleFieldFromObjectData(T(t),I.a.Lookup)},{[h.b.PartyId]:I.a.Lookup},{},{},new j.a([])))}),new V.a(e,!0,e.length,!1,null)}function A(t){return t||(typeof t==typeof Number||Object.propertyIsEnumerable(typeof t)?0:typeof t!=typeof Boolean&&null)}function x(t,e,r,n,l){let s,f=!0,u=!1;const d=new Map;try{const b=r.get_queryParameters();if(Object(k.a)(b)){const t="OData QueryParameters map is null or undefined";return g.c.error("Offline.XrmOfflineValidators.optionsValidator: "+t),Promise.reject(t)}return Object.keys(b).forEach(b=>{switch(b){case h.c.SelectQueryOption:if(C(b,t,u,n)){f=!1;let t=null;try{t=r.get_select()}catch(t){throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: Invalid value "+b),new a.a(Object(c.a)(-7020,[b]),-7020)}if(!t||!t.get_attributeNames()||0===t.get_attributeNames().length)throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: Value cannot be null "+b),new a.a(Object(c.a)(-7019,[b]),-7019);F(e,t.get_attributeNames(),b,n)}break;case h.c.ExpandQueryOption:if(C(b,t,u,n)){let t;f=!1;try{t=r.get_expand()}catch(t){throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: Invalid value "+b),new a.a(Object(c.a)(-7020,[b]),-7020)}if(!t||!t.get_expandTerms()||0===t.get_expandTerms().length)throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: Value cannot be null "+b),new a.a(Object(c.a)(-7019,[b]),-7019);s=function(t,e,r){return e.dispatch(Object(m.f)(t,!0,[],r)).then(()=>{const r=Object(o.h)(e.getState(),t);if(!r)throw new a.a(Object(c.a)(-7017,[t]),-7017);const i=new Map;return r.OneToManyRelationships&&Object.keys(r.OneToManyRelationships).forEach(t=>{const e=r.OneToManyRelationships[t];i.set(e.ReferencedEntityNavigationPropertyName,{schemaName:e.SchemaName,relationshipType:0})}),r.ManyToOneRelationships&&Object.keys(r.ManyToOneRelationships).forEach(t=>{const e=r.ManyToOneRelationships[t];i.set(e.ReferencingEntityNavigationPropertyName,{schemaName:e.SchemaName,relationshipType:2})}),r.ManyToManyRelationships&&Object.keys(r.ManyToManyRelationships).forEach(e=>{const a=r.ManyToManyRelationships[e];a.Entity1LogicalName===t?i.set(a.Entity1NavigationPropertyName,{schemaName:a.SchemaName,relationshipType:1}):i.set(a.Entity2NavigationPropertyName,{schemaName:a.SchemaName,relationshipType:1})}),i}).catch(e=>{throw g.c.error("Offline.XrmOfflineValidators.getNavigationPropertiesForEntity: Entity Metadata could not be retrieved for entity "+t+" with error "+Object(i.f)(e)),e}).catch(e=>{throw g.c.error("Offline.XrmOfflineValidators.getNavigationPropertiesForEntity: Navigation properties for entity "+t+" could not be retrieved with error "+Object(i.f)(e)),e})}(e,n,l).then(r=>{if(!r)throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: Navigation property is undefined for entity "+e+" in "+b),new a.a(Object(c.a)(-7021,[e]),-7021);return t.get_expandTerms().forEach(t=>{if(!r.has(t.get_navigationProperty()))throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: Navigation property "+t.get_navigationProperty()+" is invalid for entity "+e+" in "+b),new a.a(Object(c.a)(-7022,[t.get_navigationProperty(),e]),-7022);d.set(t.get_navigationProperty(),r.get(t.get_navigationProperty()))}),d}).catch(t=>{throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: Entity Metadata could not be retrieved for "+e+" in "+b+" with error "+Object(i.f)(t)),new a.a(Object(c.a)(-7017,[e]),-7017)})}break;case h.c.TopQueryOption:if(C(b,t,u,n)){f=!1;let t=0;try{t=r.get_top()}catch(t){throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: Invalid value "+b),new a.a(Object(c.a)(-7020,[b]),-7020)}if(t<=0)throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: Value must be a non-negative number "+b),new a.a(Object(c.a)(-7023),-7023)}break;case h.c.OrderByQueryOption:if(C(b,t,u,n)){f=!1;const t=[];let i=null;try{i=r.get_orderBy()}catch(t){throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: Invalid value "+b),new a.a(Object(c.a)(-7020,[b]),-7020)}if(!i||0===i.get_orderByTermTokens().length)throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: Value cannot be null "+b),new a.a(Object(c.a)(-7019,[b]),-7019);i.get_orderByTermTokens().forEach(e=>{t.push(e.get_attributeName())}),t&&t.length>0&&F(e,t,b,n)}break;case h.c.FilterQueryOption:if(C(b,t,u,n)){f=!1;let t=null;try{t=r.get_filter()}catch(t){throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: Invalid value "+b),new a.a(Object(c.a)(-7020,[b]),-7020)}if(!t||!t.get_filterExpression())throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: Value cannot be null "+b),new a.a(Object(c.a)(-7019,[b]),-7019);!function t(e,r,i){if(r){const n=[];if(r.get_conditions()){r.get_conditions().forEach(t=>{n.push(t.get_attributeName())});const t=R(n,e,i.getState());r.get_conditions().forEach(e=>{try{const r=t[e.get_attributeName()];!function(t,e,r){switch(e){case I.a.Unknown:case I.a.EntityImage:case I.a.ManagedProperty:case I.a.PartyList:throw new Error(String.format("Attribute "+t+" is not supported in filter query option."));case I.a.Boolean:case I.a.Customer:case I.a.EntityName:case I.a.Lookup:case I.a.Memo:case I.a.Owner:case I.a.PickList:case I.a.State:case I.a.Status:case I.a.String:case I.a.UniqueIdentifier:if(r!==h.a.Equal&&r!==h.a.NotEqual)throw new Error(String.format("Operator "+r+" is not supported with attribute "+t+" in filter query option."))}}(e.get_attributeName(),r,e.get_operator())}catch(r){throw new a.a(Object(c.a)(-7027,["Attribute(Name = "+e.get_attributeName()+", type = "+t[e.get_attributeName()]+", Condition = "+e.get_operator()+")"]),-7027)}})}r.get_filterExpressions()&&r.get_filterExpressions().length>0&&r.get_filterExpressions().forEach(r=>{t(e,r,i)})}}(e,t.get_filterExpression(),n)}break;case h.c.FetchXmlQueryOption:if(!f)throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: No other query options are supported "+b),new a.a(Object(c.a)(-7026),-7026);if(C(b,t,u,n)){u=!0;const t=r.get_fetchXml();try{const e=(new DOMParser).parseFromString(t,"text/xml");if(!e)throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: Invalid FetchXML "+b),new a.a(Object(c.a)(-7025),-7025);{const t=e.getElementsByTagName("fetch");if(!t[0])throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: Invalid FetchXML "+b),new a.a(Object(c.a)(-7025),-7025)}}catch(t){throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: Invalid FetchXML "+b),new a.a(Object(c.a)(-7025),-7025)}}break;default:if(C(b,t,u,n)){const t=r.get_queryParameters()[b];switch(f=!1,b){case h.c.SkipTokenQueryOption:if(!t||isNaN(parseInt(t.toString(),10))||parseInt(t.toString(),10)<=0)throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: Invalid Retrieve option "+b),new a.a(Object(c.a)(-7028,[b]),-7028);break;case h.c.GetOnlyRelatedEntity:if(!t||!Object(y.a)(t.toString()))throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: Invalid Retrieve option "+b),new a.a(Object(c.a)(-7028,[b]),-7028);break;case h.c.SavedQueryOption:if(Object(M.f)(n.getState(),X.jb)){if(!t||p.a.isNullOrEmpty(p.a.tryParseOrNull(t.toString())))throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: Invalid Retrieve option"+b),new a.a(Object(c.a)(-7028,[b]),-7028);break}default:throw g.c.error("Offline.XrmOfflineValidators.optionsValidator: Invalid option "+b),new a.a(Object(c.a)(-7027),-7027)}}}}),s||Promise.resolve(d)}catch(t){return g.c.error("Offline.XrmOfflineValidators.optionsValidator: "+t),Promise.reject(t)}}function C(t,e,r,i){let n=!1;switch(t){case h.c.SelectQueryOption:case h.c.ExpandQueryOption:case h.c.GetOnlyRelatedEntity:n=!0;break;case h.c.TopQueryOption:case h.c.OrderByQueryOption:case h.c.FilterQueryOption:case h.c.FetchXmlQueryOption:case h.c.SkipTokenQueryOption:n=5===e;break;case h.c.SavedQueryOption:n=Object(M.f)(i.getState(),X.jb)&&5===e}if(!n)throw g.c.error("Offline.XrmOfflineValidators.isOptionValid: Retrieve query option not supported:"+t),new a.a(Object(c.a)(-7028,[t]),-7028);if(r)throw n=!1,g.c.error("Offline.XrmOfflineValidators.isOptionValid: No query options with fetch XML:"+t),new a.a(Object(c.a)(-7026),-7026);return n}function F(t,e,r,a){const i=a.getState(),o=Object(n.d)(i,t);if(!o)throw g.c.error("Offline.XrmOfflineValidators.areAttributesSupported: No attribute metadata is available in the state tree. EntityName: "+t),new Error("Attributes Metadata not found while validating attributes in query options. EntityName: "+t);e&&e.length>0&&e.forEach(e=>{const a=q(i,t,e);if(!o[a])throw new Error(`Invalid Attribute name: ${a} of entity ${t}`);if(!function(t,e){switch(t){case I.a.Unknown:case I.a.Decimal:case I.a.Double:case I.a.Integer:case I.a.Memo:case I.a.Money:case I.a.String:case I.a.UniqueIdentifier:case I.a.BigInt:case I.a.Owner:case I.a.Customer:case I.a.Lookup:case I.a.DateTime:case I.a.PickList:case I.a.State:case I.a.Status:case I.a.Boolean:case I.a.EntityName:return!0;case I.a.MultiSelectPickList:return function(t){return t===h.c.SelectQueryOption||t===h.c.FilterQueryOption}(e);default:return!1}}(o[a].Type,r)||o[a].AttributeOf)throw new Error(String.format("Attribute type "+o[a].Type+" for attribute "+o[a].LogicalName+" and OData option "+r+" is not supported in offline."))})}function R(t,e,r){const a=t.map(t=>q(r,e,t));return Object(n.c)(a,e,r)}function q(t,e,r){const a=D(r),i=Q(r);return a&&2===a.length&&Object(n.a)(t,e,a[1])?a[1]:i&&2===i.length&&Object(n.a)(t,e,i[1])?i[1]:r}function Q(t){return t.match(/^(.*)@odata.bind$/)}function D(t){return t.match(/^_(.*)_value$/)}},ROKC:function(t,e,r){"use strict";r.d(e,"a",(function(){return l}));var a=r("TBkx"),i=r("Nzmy"),n=r("d+dp"),o=r("5qiD"),c=r("/oKV");function l(t,e,r){return{type:"offline.retrieve.multiple.records",execute:({dispatch:l,getState:s},f)=>f.DataSource.retrieveMultiple(t,new n.a(o.a.NotCached,c.a.Local),e,r).nativePromise().then(t=>(i.c.info("Able to successfully retrieve multiple record from offline db"),t)).catch(t=>{throw i.c.error("Unable to Retrieve multiple record in offline db "+Object(a.f)(t)),t})}}}}]),window.bundleExecutionMarkers["scripts/4.js?v=1.4.3886-master"].end=window.performance.now(),window.reportBundleExecutionTimes&&window.reportBundleExecutionTimes();